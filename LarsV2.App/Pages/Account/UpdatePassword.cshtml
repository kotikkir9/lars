@page 
@model UpdatePasswordModel

@section Scripts
{
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/dist/jquery.validate.unobtrusive.js"></script>
}

<h3>Skift adgangskode</h3>
<hr />

<form enctype="multipart/form-data" method="post">
    <div asp-validation-summary="ModelOnly" class="font-weight-bold text-danger"></div>
    <div class="form-group">
        <label asp-for="CurrentPassword" style="font-weight: bold;">Nuværende adgangskode</label>
        <span class="text-danger p-2" asp-validation-for="CurrentPassword" style="font-weight:bold;"></span>
        <input asp-for="CurrentPassword" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="NewPassword" style="font-weight: bold;">Ny adgangskode</label>
        <span class="text-danger p-2" asp-validation-for="NewPassword" style="font-weight:bold" ;></span>
        <input asp-for="NewPassword" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="NewPasswordConfirm" style="font-weight: bold;">Genindtast ny adgangskode</label>
        <span class="text-danger p-2" asp-validation-for="NewPasswordConfirm" style="font-weight:bold" ;></span>
        <input asp-for="NewPasswordConfirm" class="form-control" />
    </div>
    <hr />
    <button type="submit" class="btn btn-success">Skift adgangskode</button>
</form>


@functions
{
    public class UpdatePasswordModel : AdminPageModel
    {
        public UserManager<IdentityUser> UserManager;

        public UpdatePasswordModel(UserManager<IdentityUser> userManager)
        {
            UserManager = userManager;
        }

        [BindProperty]
        [Required(ErrorMessage = "Feltet mangler at blive udfyldt")]
        [DataType(DataType.Password)]
        public string CurrentPassword { get; set; }

        [BindProperty]
        [Required(ErrorMessage = "Feltet mangler at blive udfyldt")]
        [DataType(DataType.Password)]
        public string NewPassword { get; set; }

        [BindProperty][DataType(DataType.Password)]
        [Required(ErrorMessage = "Feltet mangler at blive udfyldt")]
        [Compare("NewPassword", ErrorMessage = "Adgangskoder er ikke ens")]
        public string NewPasswordConfirm { get; set; }

        public async Task<IActionResult> OnPostAsync()
        {
            if (ModelState.IsValid)
            {
                var user = await UserManager.FindByNameAsync(User.Identity.Name);
                var result = await UserManager.ChangePasswordAsync(user, CurrentPassword, NewPassword);

                if (result.Succeeded)
                {
                    return RedirectToPage("/admin/users");
                }

                foreach (var error in result.Errors)
                {
                    ModelState.AddModelError("", error.Description);
                }
            }

            return Page();
        }
    }
}